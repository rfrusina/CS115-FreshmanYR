'''Created on Apr 11, 2017@author: Robert Frusina and Julie GrecoI pledge on my honor that I have abided by the Stevens Honor System.JD PB'''from cs115 import *Data ={}file_name = 'musicrecplus.txt'    def read():    '''This function essentially opens up and reads the text file that you have already     named and saved.'''    F = open(file_name,'r')    for line in F:        if line!='\n' and line!='':            s = line.strip().split(':')            name = s[0]            artists = s[1].split(',')            Data[name]=artists    F.close()    def write():    '''Writes the data into the data file that you have created.'''    s=""    F=open(file_name,'w')    for i in Data:        prefs = ''        for a in Data[i]:            prefs=prefs+a+','        s += i+":"+prefs[:-1]+"\n"    F.write(s)    F.close()    def get_name():    '''This asks the user for their name of a person. This person is a main object    and they can be manipulated, and be given features. '''    a = input("Enter name: ")    a = a.strip()    a = a.title()    return adef mode(L):    '''This function basically check to see the first digit of the word that the user inputs, using for loops.'''    r = {}    for i in L:        if i not in r: r[i] = 1        else: r[i] += 1    U = []    q = []    for i in r:        U += [i]        q +=[r[i]]    return U[q.index(max(q))]def matches(L1, L2):    '''Checks to see if within a list there is a matching word. '''    r = []    for i in L1:        if i in L2:            r += [i]    return rdef bestMatch(L):    '''Returns the best match of a artist for a person.'''    r = []    for i in L:        r += [i[1]]    return L[r.index(max(r))][0]def notMatches(L1, L2):    '''Returns what are not matches of the artists. '''    r = []    for i in L2:        if i not in L1:            r += [i]    return rdef reks():    '''Checks to see if a user if in the database. If they are, it uses the matches function and notMatches function to     recommend artists built for that particular person.'''    user = input("Who do you want recommendations for? \n")    if user not in Data: return "that user is not in our database"    L = []    for i in Data:        if i != user:            x = matches(Data[user], Data[i])            L += [[i, len(x)]]    r = notMatches(Data[user], Data[bestMatch(L)])    return rdef get_music():    '''This is the main function. It allows the user to input their own music and     decide whom their favorite artists are, and make preferences, etc. '''    L = []    while(1):        m = input("Enter artist (or E to exit): ")        if m =="E":            break        m = m.strip().title()        L+=[m]    return Ldef music():    '''This is the function that if the user hits E, it escapes. Otherwise, it gets the music     from the user. '''    read()    while(1):        name = get_name()        if name == "E":            break        fav_music = get_music()        Data[name]=fav_music    print(Data)    write()def pop():    '''This returns the mode function, using a for loop to run through all the users. '''    L = []    for i in Data:        L += Data[i]    return mode(L)def howP():    '''This function basically goes through all of the users in Data and check if c is equal to that    user, and if it is it returns it.'''    c=0    L=[]    for i in Data:        L += Data[i]    for i in L:        if i == mode(L): c += 1    return cdef mostLikes():    '''This function is very simple. It just returns the most mentioned artist.'''    D = []    for i in Data:        D += [Data[i]]    D = map(len, D)    for i in Data:        if max(D) == len(Data[i]):            if i[-1] == '$':                return 'user opted out'            else:                return idef menu():    return '''Enter a letter to choose an option:  e - enter preferences  r - get recommendations  p - show most popular artists  h - how popular is the most popular  m - which user has the most likes  q - save and quit'''def main():    read()    while(1):        print(Data)        print(menu())        i = input('')        if i == 'e':            print(music())        elif i == 'r':            print(reks())        elif i == 'p':            print(pop())            print(Data)        elif i == 'h':            print(howP())        elif i == 'm':            print(mostLikes())        elif i == 'q':            break        else:            print("thats not a choice")    write()if __name__ == "__main__": main()